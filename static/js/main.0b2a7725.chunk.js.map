{"version":3,"sources":["imgs/logo.png","components/Cell.js","components/Row.js","components/Stone.js","components/Mark.js","components/Board.js","components/Panel.js","Game.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","_this","this","styles","top","props","row","left","col","react_default","a","createElement","id","className","style","onClick","cellClick","Component","Row","cells","i","push","components_Cell","key","value","Stone","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","y","drop","timing","timeFraction","b","Math","pow","duration","_ref","draw","start","performance","now","requestAnimationFrame","animate","time","progress","vm","finalRow","setState","makeEaseOut","bounce","classes","color","join","Mark","Board","rows","components_Row","board","stones","length","playerColor","components_Stone","stack","marks","components_Mark","Panel","nextPlayer","undoClick","resetClick","Game","canPlay","_this$state","won","play","prevState","currentPlayer","moves","history","checkForWin","_this$state2","checkHorizontalWin","checkVerticalWin","checkDiagonalRight","checkDiagonalLeft","winner","cellClickHandler","getEmptyBoard","Array","fill","reset","undo","pop","x","dx","dy","r","c","val","markWin","src","logo","alt","components_Panel","components_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+TCuBzBC,sMAlBF,IAAAC,EAAAC,KACCC,EAAS,CACXC,IAA4B,KAAtB,EAAIF,KAAKG,MAAMC,KAAW,EAAI,IACpCC,KAAuB,IAAjBL,KAAKG,MAAMG,IAAU,EAAI,KAGnC,OACIC,EAAAC,EAAAC,cAAA,OACIC,GAAI,QAAUV,KAAKG,MAAMC,IAAM,IAAMJ,KAAKG,MAAMG,IAChDK,UAAU,OACVC,MAAOX,EACPY,QAAS,WAAOd,EAAKI,MAAMW,UAAUf,EAAKI,MAAMG,eAb7CS,cCyBJC,mLAlBP,IAFA,IAAIC,EAAQ,GAEJC,EAAG,EAAGA,EAAI,EAAGA,IACjBD,EAAME,KAAKZ,EAAAC,EAAAC,cAACW,EAAD,CACPC,IAAKH,EACLI,MAAOtB,KAAKG,MAAMc,MAAMC,GACxBd,IAAKJ,KAAKG,MAAMC,IAChBE,IAAKY,EACLJ,UAAWd,KAAKG,MAAMW,aAI9B,OACIP,EAAAC,EAAAC,cAAA,OAAKC,GAAI,OAASV,KAAKG,MAAMC,IAAKO,UAAU,OACtCM,UAjBAF,aCyEHQ,oBA1EX,SAAAA,EAAYpB,GAAO,IAAAJ,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAuB,IACfxB,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5B,KAAMG,KACD0B,MAAQ,CACTC,GAAK,IAAI,GAHE/B,mFAQfC,KAAK+B,KAAK/B,KAAKG,MAAMC,yCAGZ4B,GACT,OAAO,SAASC,GACd,OAAO,EAAID,EAAO,EAAIC,mCAIjBA,GACP,IAAK,IAAIzB,EAAI,EAAG0B,EAAI,GAAM1B,GAAK0B,EAAGA,GAAK,EACrC,GAAID,IAAiB,EAAI,EAAIzB,GAAK,GAChC,OAAQ2B,KAAKC,KAAK,GAAK,EAAI5B,EAAI,GAAKyB,GAAgB,EAAG,GAAKE,KAAKC,IAAIF,EAAG,sCAK9C,IAAzBG,EAAyBC,EAAzBD,SAAUE,EAAeD,EAAfC,KAAMP,EAASM,EAATN,OAEjBQ,EAAQC,YAAYC,MAExBC,sBAAsB,SAASC,EAAQC,GACrC,IAAIZ,GAAgBY,EAAOL,GAASH,EAChCJ,EAAe,IAAGA,EAAe,GAErC,IAAIa,EAAYd,EAAUA,EAAOC,GAAeA,EAEhDM,EAAKO,GAEDb,EAAe,GACjBU,sBAAsBC,kCAMzBxC,GACD,IAAM2C,EAAK/C,KACLgD,EAAwB,KAAZ,EAAI5C,GAAY,EAElCJ,KAAK4C,QAAQ,CACTP,SAAU,IACVE,KAAM,SAACO,GACLC,EAAGE,SAAS,CAACnB,EAAGkB,EAAWF,KAE7Bd,OAAQe,EAAGG,YAAYH,EAAGI,2CAKhC,IAAMC,EAAU,CAAC,QAASpD,KAAKG,MAAMkD,OAAQC,KAAK,KAE1CrD,EAAS,CACXC,IAAMF,KAAK6B,MAAMC,EAAK,IACtBzB,KAAuB,IAAjBL,KAAKG,MAAMG,IAAU,EAAI,KAGnC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAI,SAAWV,KAAKG,MAAMO,GAC1BE,MAAOX,EACPU,UAAYyC,WArETrC,cC6ELwC,cA5EX,SAAAA,EAAYpD,GAAO,IAAAJ,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAuD,IACfxD,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAA5B,KAAMG,KACD0B,MAAQ,CACTC,GAAK,IAAI,GAHE/B,mFASfC,KAAK+B,KAAK/B,KAAKG,MAAMC,yCAGZ4B,GACT,OAAO,SAASC,GACd,OAAO,EAAID,EAAO,EAAIC,mCAIjBA,GACP,IAAK,IAAIzB,EAAI,EAAG0B,EAAI,GAAM1B,GAAK0B,EAAGA,GAAK,EACrC,GAAID,IAAiB,EAAI,EAAIzB,GAAK,GAChC,OAAQ2B,KAAKC,KAAK,GAAK,EAAI5B,EAAI,GAAKyB,GAAgB,EAAG,GAAKE,KAAKC,IAAIF,EAAG,sCAK9C,IAAzBG,EAAyBC,EAAzBD,SAAUE,EAAeD,EAAfC,KAAMP,EAASM,EAATN,OAEjBQ,EAAQC,YAAYC,MAExBC,sBAAsB,SAASC,EAAQC,GACrC,IAAIZ,GAAgBY,EAAOL,GAASH,EAChCJ,EAAe,IAAGA,EAAe,GAErC,IAAIa,EAAYd,EAAUA,EAAOC,GAAeA,EAEhDM,EAAKO,GAEDb,EAAe,GACjBU,sBAAsBC,kCAMzBxC,GACD,IAAM2C,EAAK/C,KACLgD,EAAqB,IAAR5C,EAAY,EAE/BJ,KAAK4C,QAAQ,CACTP,SAAU,IACVE,KAAM,SAACO,GACLC,EAAGE,SAAS,CAACnB,EAAGkB,EAAWF,KAE7Bd,OAAQe,EAAGG,YAAYH,EAAGI,2CAK9B,IAAMC,EAAU,CAAC,QAAQE,KAAK,KAExBrD,EAAS,CAEXC,IAAMF,KAAK6B,MAAMC,EAAK,IACtBzB,KAAuB,IAAjBL,KAAKG,MAAMG,IAAU,EAAI,KAGnC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAI,QAAUV,KAAKG,MAAMO,GACzBE,MAAOX,EACPU,UAAWyC,WAvETrC,aC8DJyC,mLAnDP,IAFA,IAAIC,EAAO,GAEHvC,EAAG,EAAGA,EAAI,EAAGA,IACjBuC,EAAKtC,KAAKZ,EAAAC,EAAAC,cAACiD,EAAD,CACNrC,IAAKH,EACLd,IAAKc,EACLD,MAAOjB,KAAKG,MAAMwD,MAAMzC,GACxBJ,UAAWd,KAAKG,MAAMW,aAM9B,IAFA,IAAI8C,EAAS,GAEL1C,EAAG,EAAGA,EAAIlB,KAAKG,MAAMyD,OAAOC,OAAQ3C,IAAK,CAE7C,IAAM4C,EAAe5C,EAAI,IAAM,EAAM,MAAQ,SAE7C0C,EAAOzC,KAAKZ,EAAAC,EAAAC,cAACsD,EAAD,CACR1C,IAAKH,EACLR,GAAIQ,EACJZ,IAAKN,KAAKG,MAAMyD,OAAO1C,GAAGZ,IAC1BF,IAAKJ,KAAKG,MAAMyD,OAAO1C,GAAG8C,MAC1BX,MAAOS,KAMf,IAFA,IAEQ5C,EAAG,EAAGA,EAAIlB,KAAKG,MAAM8D,MAAMJ,OAAQ3C,IAAK,CAE5C,IAAM4C,EAAe5C,EAAI,IAAM,EAAM,MAAQ,SAE7C0C,EAAOzC,KAAKZ,EAAAC,EAAAC,cAACyD,EAAD,CACR7C,IAAKH,EACLR,GAAIQ,EACJZ,IAAKN,KAAKG,MAAM8D,MAAM/C,GAAGZ,IACzBF,IAAKJ,KAAKG,MAAM8D,MAAM/C,GAAGd,IACzBiD,MAAOS,KAIf,OAEIvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACT8C,EACAG,EAnBE,WA9BA7C,aCoBLoD,0LApBP,IAAML,EAAe9D,KAAKG,MAAMiE,WAAa,IAAM,EAAM,MAAQ,SAEjE,OACI7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAEXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,OAAOE,QAASb,KAAKG,MAAMkE,YAExC9D,EAAAC,EAAAC,cAAA,KAAGE,UAAU,MAAME,QAASb,KAAKG,MAAMmE,cAI3C/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,SAAWmD,aAjB3B/C,cCqSLwD,cA5RX,SAAAA,EAAYpE,GAAO,IAAAJ,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAuE,IACfxE,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAA5B,KAAMG,KAoBVqE,QAAU,SAAClE,GAAQ,IAAAmE,EACQ1E,EAAK8B,MAApB6C,EADOD,EACPC,IAAKV,EADES,EACFT,MAEb,OAAQU,GAAOV,EAAM1D,GAAO,GAxBbP,EA2BnB4E,KAAO,SAACrE,GAEJ,IAAIF,EAEJL,EAAKkD,SAAS,SAAC2B,GAAc,IAEnBjB,EAAwDiB,EAAxDjB,MAAOK,EAAiDY,EAAjDZ,MAAOa,EAA0CD,EAA1CC,cAAeC,EAA2BF,EAA3BE,MAAOlB,EAAoBgB,EAApBhB,OAAoBgB,EAAZG,QA0BlD,OArBA3E,EAAM,EAAI4D,EAAM1D,GAGhBuE,EAAgB,EAAIC,EAAMjB,OAAS,EAGnCF,EAAMvD,GAAKE,GAAOuE,EAIlBb,EAAM1D,KAENsD,EAAOzC,KAAK,CAAEkC,MAAOwB,EAAevE,IAAKA,EAAK0D,MAAOA,EAAM1D,GAAO,IAIlEwE,EAAM3D,KAAKb,GAGXP,EAAKiF,cAEE,CACHrB,QACAK,QACAa,gBACAC,QACAlB,aAhEO7D,EAoKnBiF,YAAc,WAAM,IAAAC,EACwBlF,EAAK8B,MAArC8B,EADQsB,EACRtB,MAAsBmB,GADdG,EACDJ,cADCI,EACcH,OAE9B,GAAI/E,EAAKmF,mBAAmBvB,IACxB5D,EAAKoF,iBAAiBxB,IACtB5D,EAAKqF,mBAAmBzB,IACxB5D,EAAKsF,kBAAkB1B,GAEzB,CAGE,IAAM2B,EAASR,EAAMjB,OAAS,GAAK,EAAI,EAAK,EAE5C9D,EAAKkD,SAAU,CACXyB,KAAK,EACLY,aAnLOvF,EAyLnBwF,iBAAmB,SAACjF,GACZP,EAAKyE,QAAQlE,IACbP,EAAK4E,KAAKrE,IA3LCP,EA+LnByF,cAAgB,WAEZ,IADA,IAAI7B,EAAQ,GACJzC,EAAI,EAAGA,EAAI,EAAGA,IAClByC,EAAMxC,KAAK,IAAIsE,MAAM,GAAGC,KAAK,IAEjC,OAAO/B,GApMQ5D,EAuMnB4F,MAAQ,WACJ,IAAIhC,EAAQ5D,EAAKyF,gBAEdzF,EAAK8B,MAAMiD,MAAMjB,OAAS,GAEzB9D,EAAKkD,SAAS,CACVU,QACAK,MAAO,IAAIyB,MAAM,GAAGC,KAAK,GACzBZ,MAAO,GACPD,cAAe,EACfjB,OAAQ,GACRK,MAAO,GACPqB,OAAQ,EACRZ,KAAK,KApNE3E,EAyNnB6F,KAAO,WACC7F,EAAK8B,MAAMiD,MAAMjB,OAAU,GAE3B9D,EAAKkD,SAAS,SAAC2B,GAAc,IAEnBjB,EAAoEiB,EAApEjB,MAAOK,EAA6DY,EAA7DZ,MAAsBc,GAAuCF,EAAtDC,cAAsDD,EAAvCE,OAAOlB,EAAgCgB,EAAhChB,OAAQK,EAAwBW,EAAxBX,MAAQS,EAAgBE,EAAhBF,IAAKY,EAAWV,EAAXU,OAGzDhF,EAAMwE,EAAMe,MAGlB7B,EAAM1D,KAGN,IAAMF,EAAM,EAAI4D,EAAM1D,GAkBtB,OAfAsD,EAAOiC,MAGPlC,EAAMvD,GAAKE,GAAO,EAMdoE,IACAA,GAAM,EACNT,EAAQ,GACRqB,EAAS,GAGN,CACH3B,QACAK,QACAa,cAZY,EAAIC,EAAMjB,OAAS,EAa/BiB,QACAlB,SACAK,QACAS,MACAY,aA9PZvF,EAAK8B,MAAQ,CACT8B,MAAM,CACF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvBK,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1Bc,MAAO,GACPD,cAAe,EACfjB,OAAQ,GACRK,MAAO,GACPqB,OAAQ,EACRZ,KAAK,GAjBM3E,uEAsEX+F,EAAGhE,EAAGiE,EAAIC,GAGd,IAHkB,IACV/B,EAAUjE,KAAK6B,MAAfoC,MAEC/C,EAAI,EAAGA,EAAI,EAAGA,IACnB+C,EAAM9C,KAAK,CAAEf,IAAK0F,EAAI5E,EAAI6E,EAAKzF,IAAKwB,EAAIZ,EAAI8E,IAE5ChG,KAAKiD,SAAW,CAAEgB,qDAIPN,GAEf,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIvC,EAAMsC,GAAGC,GAAK,EAAG,CACjB,IAAMC,EAAMxC,EAAMsC,GAAGC,GACrB,GAAIvC,EAAMsC,GAAGC,EAAI,KAAOC,GACpBxC,EAAMsC,GAAGC,EAAI,KAAOC,GACpBxC,EAAMsC,GAAGC,EAAI,KAAOC,EAIhB,OADAnG,KAAKoG,QAAQH,EAAGC,EAAG,EAAG,IACf,EAM3B,OAAO,2CAGMvC,GAEb,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIvC,EAAMsC,GAAGC,GAAK,EAAG,CACjB,IAAMC,EAAMxC,EAAMsC,GAAGC,GACrB,GAAIvC,EAAMsC,EAAI,GAAGC,KAAOC,GACpBxC,EAAMsC,EAAI,GAAGC,KAAOC,GACpBxC,EAAMsC,EAAI,GAAGC,KAAOC,EAIhB,OADAnG,KAAKoG,QAAQH,EAAGC,GAAI,EAAG,IAChB,EAM3B,OAAO,6CAGQvC,GAEf,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIvC,EAAMsC,GAAGC,GAAK,EAAG,CACjB,IAAMC,EAAMxC,EAAMsC,GAAGC,GACrB,GAAIvC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,GACxBxC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,GACxBxC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,EAIpB,OADAnG,KAAKoG,QAAQH,EAAGC,GAAI,EAAG,IAChB,EAM3B,OAAO,4CAGOvC,GAEd,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIvC,EAAMsC,GAAGC,GAAK,EAAG,CACjB,IAAMC,EAAMxC,EAAMsC,GAAGC,GACrB,GAAIvC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,GACxBxC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,GACxBxC,EAAMsC,EAAI,GAAGC,EAAI,KAAOC,EAIpB,OADAnG,KAAKoG,QAAQH,EAAGC,GAAI,GAAI,IACjB,EAM3B,OAAO,mCAuGP,IAAM9B,EAAapE,KAAK6B,MAAMiD,MAAMjB,OAAS,EAE7C,OACItD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eACdJ,EAAAC,EAAAC,cAAA,OAAK4F,IAAKC,IAAM3F,UAAU,YAAY4F,IAAI,SAC1ChG,EAAAC,EAAAC,cAAA,iCAEJF,EAAAC,EAAAC,cAAC+F,EAAD,CAAOpC,WAAYA,EAAYC,UAAWrE,KAAK4F,KAAMtB,WAAYtE,KAAK2F,QACtEpF,EAAAC,EAAAC,cAACgG,EAAD,CAAO9C,MAAO3D,KAAK6B,MAAM8B,MACrBC,OAAQ5D,KAAK6B,MAAM+B,OACnBK,MAAOjE,KAAK6B,MAAMoC,MAClBnD,UAAWd,KAAKuF,2BArRjBxE,aCPnB2F,IAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.0b2a7725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.facd4292.png\";","import React, { Component } from 'react';\nimport './../css/Cell.css';\n\nclass Cell extends Component {\n\n    render() {\n        const styles = {\n            top: (5 - this.props.row) * 100/7 + '%',\n            left: this.props.col * 100/7 + '%'\n        };\n\n        return (\n            <div\n                id={\"cell-\" + this.props.row + \"-\" + this.props.col}\n                className=\"cell\"\n                style={styles}\n                onClick={() => {this.props.cellClick(this.props.col)}}\n            >\n            </div>\n        );\n    }\n}\n\nexport default Cell;\n","import React, { Component } from 'react';\nimport './../css/Row.css';\n\nimport Cell from './Cell';\n\nclass Row extends Component {\n\n    render() {\n        let cells = []; \n\n        for(let i =0; i < 7; i++) {\n            cells.push(<Cell \n                key={i}\n                value={this.props.cells[i]}\n                row={this.props.row}\n                col={i}\n                cellClick={this.props.cellClick}\n            />);\n        }\n\n        return (\n            <div id={\"row-\" + this.props.row} className=\"row\">\n                { cells }\n            </div>\n        );\n    }\n}\n\nexport default Row;\n","import React, { Component } from 'react';\nimport './../css/Stone.css';\n\nclass Stone extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            y:  -100/7\n        }\n    };\n\n    componentDidMount() {\n        this.drop(this.props.row);\n    }\n\n     makeEaseOut(timing) {\n        return function(timeFraction) {\n          return 1 - timing(1 - timeFraction);\n        }\n      }\n  \n        bounce(timeFraction) {\n        for (let a = 0, b = 1; 1; a += b, b /= 2) {\n          if (timeFraction >= (7 - 4 * a) / 11) {\n            return -Math.pow((11 - 6 * a - 11 * timeFraction) / 4, 2) + Math.pow(b, 2)\n          }\n        }\n      }\n\n    animate({duration, draw, timing}) {\n\n        let start = performance.now();\n      \n        requestAnimationFrame(function animate(time) {\n          let timeFraction = (time - start) / duration;\n          if (timeFraction > 1) timeFraction = 1;\n      \n          let progress = (timing) ? timing(timeFraction): timeFraction;\n      \n          draw(progress);\n      \n          if (timeFraction < 1) {\n            requestAnimationFrame(animate);\n          }\n      \n        });\n      }\n\n    drop(row) {\n        const vm = this;\n        const finalRow = (5 - row ) * 100/7;\n\n        this.animate({\n            duration: 300,\n            draw: (progress) => {\n              vm.setState({y: finalRow * progress })\n            },\n            timing: vm.makeEaseOut(vm.bounce)\n          });        \n    }\n\n    render() {\n      const classes = [\"stone\", this.props.color ].join(\" \");\n        \n        const styles = {\n            top:  this.state.y  + \"%\",\n            left: this.props.col * 100/7 + \"%\"\n        };\n\n        return (\n            <div id={\"stone-\" + this.props.id}\n                 style={styles}\n                 className={ classes }>\n            </div>\n        );\n    }\n}\n\nexport default Stone;\n","import React, { Component } from 'react';\nimport './../css/Stone.css';\n\nclass Mark extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            y:  -100/7\n        }\n    };\n\n\n    componentDidMount() {\n        this.drop(this.props.row);\n    }\n\n     makeEaseOut(timing) {\n        return function(timeFraction) {\n          return 1 - timing(1 - timeFraction);\n        }\n      }\n  \n        bounce(timeFraction) {\n        for (let a = 0, b = 1; 1; a += b, b /= 2) {\n          if (timeFraction >= (7 - 4 * a) / 11) {\n            return -Math.pow((11 - 6 * a - 11 * timeFraction) / 4, 2) + Math.pow(b, 2)\n          }\n        }\n      }\n\n    animate({duration, draw, timing}) {\n\n        let start = performance.now();\n      \n        requestAnimationFrame(function animate(time) {\n          let timeFraction = (time - start) / duration;\n          if (timeFraction > 1) timeFraction = 1;\n      \n          let progress = (timing) ? timing(timeFraction): timeFraction;\n      \n          draw(progress);\n      \n          if (timeFraction < 1) {\n            requestAnimationFrame(animate);\n          }\n      \n        });\n      }\n\n    drop(row) {\n        const vm = this;\n        const finalRow = ( row ) * 100/7;\n\n        this.animate({\n            duration: 300,\n            draw: (progress) => {\n              vm.setState({y: finalRow * progress })\n            },\n            timing: vm.makeEaseOut(vm.bounce)\n          });        \n    }\n\n    render() {\n        const classes = [\"mark\"].join(\" \");\n        \n        const styles = {\n            // top:  this.props.row * 100/7 + \"%\",\n            top:  this.state.y  + \"%\",\n            left: this.props.col * 100/7 + \"%\"\n        };\n\n        return (\n            <div id={\"mark-\" + this.props.id}\n                 style={styles}\n                 className={classes}>\n            </div>\n        );\n    }\n}\n\nexport default Mark;\n","import React, { Component } from 'react';\nimport './../css/Board.css';\n\nimport Row from './Row';\nimport Stone from './Stone'\nimport Mark from './Mark'\n\n\nclass Board extends Component {\n\n    render() {\n\n        let rows = [];\n\n        for(let i =0; i < 6; i++) {\n            rows.push(<Row\n                key={i}\n                row={i}\n                cells={this.props.board[i]}\n                cellClick={this.props.cellClick}\n            />);\n        }\n\n        let stones = [];\n\n        for(let i =0; i < this.props.stones.length; i++) {\n            \n            const playerColor = (i % 2 === 0 ) ? \"red\" : \"yellow\";\n\n            stones.push(<Stone\n                key={i}\n                id={i}\n                col={this.props.stones[i].col}\n                row={this.props.stones[i].stack}\n                color={playerColor}\n            />);\n        }\n\n        let marks = [];\n\n        for(let i =0; i < this.props.marks.length; i++) {\n            \n            const playerColor = (i % 2 === 0 ) ? \"red\" : \"yellow\";\n\n            stones.push(<Mark\n                key={i}\n                id={i}\n                col={this.props.marks[i].col}\n                row={this.props.marks[i].row}\n                color={playerColor}\n            />);\n        }\n\n        return (\n            \n            <div className=\"board\">\n                { rows }\n                { stones }\n\n                { marks }\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './../css/Panel.css';\nimport './../css/Stone.css';\n\nclass Panel extends Component {\n\n    render() {\n\n        const playerColor = (this.props.nextPlayer % 2 === 0 ) ? \"red\" : \"yellow\";\n\n        return (\n            <div className=\"panel\">\n                {/* <button> */}\n                <div className=\"buttons\">\n                    <a className=\"undo\" onClick={this.props.undoClick}>\n                    </a>\n                    <a className=\"new\" onClick={this.props.resetClick}>\n                    </a>\n                </div>\n                \n                <div className=\"turn-panel\" >\n                    <div className={\"stone \" + playerColor}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Panel;\n","import React, { Component } from 'react';\nimport './css/Game.css';\nimport logo from './imgs/logo.png';\n\nimport Board from './components/Board';\nimport Panel from './components/Panel';\n\n// boards[] --> 0 for empty cell, 1 (red), 2 (yellow)\n// winner --> 0 no one/game still going, 1 (red), 2 (yellow), 3 (tie)\n// redIsNext --> true if (red) turn, false if (yellow) turn\n// currentPlayer --> 0 reset , 1 (red), 2 (yellow)\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            board:[\n                [0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0]],\n            stack: [0, 0, 0, 0, 0, 0, 0],\n            moves: [],\n            currentPlayer: 0,\n            stones: [],\n            marks: [],\n            winner: 0,\n            won: false\n        }\n    };\n\n    canPlay = (col) => {\n        const { won, stack } = this.state;\n    \n        return !won && stack[col] < 6;\n    }\n\n    play = (col) => {\n        \n        let row;\n\n        this.setState((prevState) => {\n            \n            let { board, stack, currentPlayer, moves, stones, history } = prevState;\n\n            // const board = board.map(arr => arr.slice());\n\n            // get row --- > 5 - stack[col] for reverse look on array grid\n            row = 5 - stack[col];\n\n            // get current player { 1: red, 2: yellow }\n            currentPlayer = 1 + moves.length % 2;\n    \n            // update board\n            board[row][col] = currentPlayer;\n\n            // clone, add and update to col stack count\n            // const stack = stack.slice();\n            stack[col]++;\n\n            stones.push({ color: currentPlayer, col: col, stack: stack[col] - 1 });\n\n            // clone and push player moves to col\n            // const moves = moves.slice();\n            moves.push(col);\n            \n            // check for winner\n            this.checkForWin();\n            \n            return {\n                board,\n                stack,\n                currentPlayer,\n                moves,\n                stones\n            };\n        });\n\n    }\n\n    markWin(x, y, dx, dy) {\n        const { marks } = this.state\n\n        for (var i = 0; i < 4; i++) {\n            marks.push({ row: x + i * dx,  col: y + i * dy })\n\n            this.setState ( { marks } );\n        }\n    }\n\n    checkHorizontalWin(board) {\n        // check only if column is 3 or less\n        for (let r = 0; r < 6; r++ ) {\n            for (let c = 0; c < 4; c++ ) {\n                if (board[r][c] > 0) {\n                    const val = board[r][c];\n                    if (board[r][c + 1] === val &&\n                        board[r][c + 2] === val &&\n                        board[r][c + 3] === val ) {\n                            \n                            // mark winning stones\n                            this.markWin(r, c, 0, 1);\n                            return true;\n                        }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    checkVerticalWin(board) {\n        // check from row 3+  or greater\n        for (let r = 3; r < 6; r++ ) {\n            for (let c = 0; c < 7; c++ ) {\n                if (board[r][c] > 0) {\n                    const val = board[r][c];\n                    if (board[r - 1][c] === val &&\n                        board[r - 2][c] === val &&\n                        board[r - 3][c] === val ) {\n\n                            // mark winning stones\n                            this.markWin(r, c, -1, 0);\n                            return true;\n                        }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    checkDiagonalRight(board) {\n        // check from row 3+  or greater and column 3 or less\n        for (let r = 3; r < 6; r++ ) {\n            for (let c = 0; c < 4; c++ ) {\n                if (board[r][c] > 0) {\n                    const val = board[r][c];\n                    if (board[r - 1][c + 1] === val &&\n                        board[r - 2][c + 2] === val &&\n                        board[r - 3][c + 3] === val ) {\n                            \n                            // mark winning stones\n                            this.markWin(r, c, -1, 1);\n                            return true;\n                        }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    checkDiagonalLeft(board) {\n        // check from row 3+  or greater ans column 3 or less\n        for (let r = 3; r < 6; r++ ) {\n            for (let c = 3; c < 7; c++ ) {\n                if (board[r][c] > 0) {\n                    const val = board[r][c];\n                    if (board[r - 1][c - 1] === val &&\n                        board[r - 2][c - 2] === val &&\n                        board[r - 3][c - 3] === val ) {\n                            \n                            // mark winning stones\n                            this.markWin(r, c, -1, -1);\n                            return true;\n                        }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    checkForWin = () => {\n        const { board, currentPlayer, moves } = this.state;\n\n        if (this.checkHorizontalWin(board) ||\n            this.checkVerticalWin(board) ||\n            this.checkDiagonalRight(board) ||\n            this.checkDiagonalLeft(board)\n        \n        ) {\n\n            // 1 - red, 2 - yellow\n            const winner = moves.length % 2 == 0 ? 2  : 1;\n\n            this.setState ({\n                won: true,\n                winner\n            });\n        }\n   \n    }\n\n    cellClickHandler = (col) => {\n        if (this.canPlay(col)) {\n            this.play(col);\n        }\n    }\n\n    getEmptyBoard = () => {\n        let board = [];\n        for(let i = 0; i < 6; i++ ){\n            board.push(new Array(7).fill(0));\n        }\n        return board\n    }\n\n    reset = () => {\n        let board = this.getEmptyBoard();\n\n        if(this.state.moves.length > 0)\n         {\n            this.setState({\n                board,\n                stack: new Array(7).fill(0),\n                moves: [],\n                currentPlayer: 0,\n                stones: [],\n                marks: [],\n                winner: 0,\n                won: false\n            });\n        }\n    }\n\n    undo = () => {\n        if (this.state.moves.length >  1)\n        {\n            this.setState((prevState) => {\n            \n                let { board, stack, currentPlayer, moves, stones, marks,  won, winner } = prevState;\n\n                // pop recent moves and get col\n                const col = moves.pop();\n\n                // decement stack\n                stack[col]--;\n\n                // get row frm stack\n                const row = 5 - stack[col];\n\n                // pop recent stone from array\n                stones.pop();\n\n                // update board info\n                board[row][col] = 0;\n\n                // set current player\n                currentPlayer = 1 + moves.length % 2;\n\n                // if user won undo winning\n                if (won) {\n                    won = false;\n                    marks = [];\n                    winner = 0;\n                }\n \n                return {\n                    board,\n                    stack,\n                    currentPlayer,\n                    moves,\n                    stones,\n                    marks,\n                    won,\n                    winner\n                };\n            });\n        }\n    }\n\n    render() {\n        const nextPlayer = this.state.moves.length % 2;\n\n        return (\n            <div className=\"game\">\n                <header className=\"game-header\">\n                    <img src={logo} className=\"game-logo\" alt=\"logo\" />\n                    <div> Connect 4 React </div>\n                </header>\n                <Panel nextPlayer={nextPlayer} undoClick={this.undo} resetClick={this.reset} />\n                <Board board={this.state.board}\n                    stones={this.state.stones}\n                    marks={this.state.marks}\n                    cellClick={this.cellClickHandler}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}